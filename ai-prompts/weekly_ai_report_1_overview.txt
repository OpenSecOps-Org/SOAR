[CONTEXT]
- Severity levels are CRITICAL, HIGH, MEDIUM, LOW, and INFORMATIONAL.

- If there are no open tickets:
  - then the system is currently fully conforming to the desired security posture.
  - be sure to use the past tense when referring to any issues.

- Delegat SOAR constantly monitors and autoremediates issues whenever found. 
- New tickets, incidents, or autoremediations are NEVER a sign of an improved security stance: Delegat SOAR sees everything anyway.

- Autoremediations are of two kinds:
  1. Security-related, meaning that they fix real security issues the teams have overlooked, such as publicly accessible ports or misconfigurations. These should be taken very seriously, and it is vital that the team be educated about the consequences so they can avoid making the same mistake again. A high number of autoremediations of this type is a bad sign.
  2. Convenience-related, meaning that teams may rely on them deliberately to perform routine tasks, such as setting up logging. This kind of autoremediation is normal and of no concern, no matter how often it occurs.

- Incidents are not related to tickets or autoremediations.
- A sudden rise in incidents, especially in the production environment, is a sign that needs investigation.

[HOW TO IDENTIFY SOAR INCIDENTS]
- SOAR incidents can be identified by all of the following being true:
  1. The account name is the same as the value of 'global_data.aws_organization_administrative_account_name'.
  2. Its IncidentType must be exactly "Software and Configuration Checks/CloudWatch Alarms/soar-cloudwatch-alarms".
  3. Its IncidentType may NOT contain "SOAR Incidents".
  4. Its Title or Description must contain the substring "SOAR".

[AREA SUMMARIES: HOW TO ACCURATELY SUMMARIZE YOUR FINDINGS]
- Purpose: Extract main "areas" from this week's open tickets, autoremediations, and incidents for a high-level summary, not a detailed report.

- Steps:

1. Data Collection:
  * Retrieve data for this week's open tickets, autoremediations, or incidents.

2. Examine Data:
  * Look at each item individually.

3. Identify Areas:
  * For tickets and autoremediations: ONLY consider the SecurityControlId, Title, and Description.
  * For incidents: ONLY focus on IncidentType, Title, and Description.

3. Name Areas Concisely:
  * Use 2-4 word phrases from a title or description.
    * "WAF rules specify that ..." ➞ "WAF rules".
    * "ECR repositories should ..." ➞ "ECR repositories".
    * "ECR private repositories should ..." ➞ "ECR repositories".
    * "Application and Classic Load Balancers logging should ..." ➞ "load balancers".
    * "APIs ... were invoked by user ... under anomalous circumstances ..." ➞ "anomalous API user access".
    * "User access in database ..." ➞ "user access".
    * "Password reset policies need ..." ➞ "password reset".
  * NEVER quote the original title in full.
  * Always include "SOAR failures" if SOAR incidents are present.

5. Things to Avoid:
  * Do NOT mention severities.
  * Do NOT list full titles.
  * Do NOT use long area names.

6. Summary:
  * Conclude by providing a high-level summary of the areas without mentioning severities or quoting full titles/descriptions. Double-check to ensure you've captured every area.
  - Example Summary: "This week's focus areas include WAF rules, ECR repositories, User access, and Password reset."

- Reminder: This is about capturing the gist. Too much detail or direct quotes will defeat the purpose. Double and triple-check your work!

[HOW TO INTERPRET AVERAGE PENALTIES]
- Use the average penalty value to assess where most issues occurred:
  - An average penalty greater than 5 suggests many issues happened in production environments. This is a critical concern as it directly impacts system reliability and user experience.
  - An average penalty less than or equal to 2.5 suggests issues were primarily in development or testing environments. These issues are less critical as they were caught before reaching production.

- When discussing average penalties in your report, explicitly state whether issues occurred mainly in production or development/testing based on the above criteria.

[INSTRUCTIONS]
- The section should have subsections for the general security level, tickets, autoremediations, incidents, and accounts breakdown.
- Be sure to end each Tickets/Autoremediations/Incidents/Accounts Breakdown subsection with the correct [[INSERT ...]] placeholder.

[GENERAL]
This section provides a general overview of the security situation, focusing on the total and average penalties accrued both this week and last week.

Before you output anything perform these two steps:

1. **Retrieve Penalty Values**: Start by fetching the following values:
   - `this_week.total_penalty`
   - `last_week.total_penalty`
   - `this_week.avg_penalty`
   - `last_week.avg_penalty`
   
Carefully verify these values twice to ensure accuracy. Then triple-check them. You must make an effort to fetch the correct values at all times.

2. **Zero vs. Non-Zero Analysis**: Carefully determine if the total penalties for both weeks are zero or non-zero. This distinction is crucial for guiding how we discuss average penalties and understand the overall security posture.

When you have determined the above, there are four possible situations. Carefully select the correct one, and then proceed accordingly:

**Situation 1 – Both `this_week.total_penalty` and `last_week.total_penalty` are zero**:
- Elaborate on the fact that there has been no issues this week or the last week.

**Situation 2 – `this_week.total_penalty` is zero and `last_week.total_penalty` is non-zero**:
- Elaborate on the fact that there were no security issues at all this week as compared to last week which had security issues. Give the average penalty of last week and comment on it, using the instructions under HOW TO INTERPRET AVERAGE PENALTIES.

**Situation 3 – `this_week.total_penalty` is non-zero and `last_week.total_penalty` is zero**:
- Elaborate on the fact that last week the system had no issues, but this week there have been issues. Give the average penalty for this week and comment on it, using the instructions under HOW TO INTERPRET AVERAGE PENALTIES.

**Situation 4 – Both `this_week.total_penalty` and `last_week.total_penalty` are non-zero**:
- Elaborate on how the total penalty has changed from last week, reflecting the overall security posture of the system. Also comment on how the average penalties have changed, reflecting the individual severities of issues, using the instructions under HOW TO INTERPRET AVERAGE PENALTIES.

In all four situations, be open to the possibility that the system is new, that very little development work has been done in it, and/or that this may have changed during the past week or weeks. Also that the SOAR might have been recently installed. Try to gauge the usage patterns. Take the age of the system into account and tailor your recommendations accordingly.

[TICKETS]
1. Provide information on n_open_tickets, n_overdue_tickets (if any), n_opened_tickets, and n_closed_tickets for this week and last week. Make sure you fetch the correct values for each week. Elaborate.
  - Please note that the tickets that were closed may not be the same as the ones opened. It is possible that some of them were opened earlier, and/or that some of the tickets opened this week may still be open (unless there are no open tickets this week).
2. Provide information about how many accounts had open tickets this week.
3. Provide statistics for closed tickets, remembering that lower values are better:
  - Average: Compare this_week.closed_tickets_avg_duration_seconds to last_week.closed_tickets_avg_duration_seconds.
  - Median: Compare this_week.closed_tickets_mdn_duration_seconds to last_week.closed_tickets_mdn_duration_seconds.
  - If the average and median values for a week differ substantially, comment on what this means.
  - If there are no closed tickets, the average and median values will be 0.
  - If there are exactly 1 or 2 closed tickets, average and median values will be equal.
  - Use human-readable format for all values. They should not be given in seconds.
4. Use the instructions under "Area Summaries" to analyze this_week.open_tickets_redux and summarize all general areas they pertain to in one sentence. Do not use bullet lists or tables. Brevity is of the essence.
5. Output the literal string "[[INSERT open_tickets_severity_level_breakdown_html_table]]", without the quotes as a placeholder.

[AUTOREMEDIATIONS]
1. Provide information about the total number of autoremediations this week and over how many accounts they were distributed, for example "This week, there were a total of N autoremediations distributed/spread over M accounts", or similar.
2. Use the instructions under "Area Summaries" to analyze this_week.autoremediations_redux and summarize all general areas they pertain to in one sentence. Do not use bullet lists or tables. Brevity is of the essence.
3. Output the literal string "[[INSERT autoremediations_severity_level_breakdown_html_table]]", without the quotes as a placeholder.

[INCIDENTS]
1. Provide information about the total number of incidents this week and over how many accounts they were distributed. You may want to comment on how the incidents are distributed over accounts (many? a few?) and environments (PROD? DEV?) and what this might mean.
2. Use the instructions under "Area Summaries" to analyze this_week.incidents_redux and summarize all general areas they pertain to in one sentence. Do not use bullet lists or tables. Brevity is of the essence. Make absolutely sure that you include the SOAR failure area if there are SOAR incidents. Do not even mention contacting Delegat AB unless there are SOAR incidents.
3. Output the literal string "[[INSERT incidents_severity_level_breakdown_html_table]]", without the quotes as a placeholder.

[ACCOUNTS BREAKDOWN]
- Output the literal string "[[INSERT accounts_breakdown_html_table]]", without the quotes as a placeholder. 
